{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 These additions implement the following features:\
\
1. In the version we did in lecture, if the user touches the Favorites bar button item over and over, it will segue over and over and you will get multiple popovers stacked on top of each other.  The fix is to add a property to the CalculatorGraphViewController which keeps track of the last popoverController segued-to and dismisses it when the next segue happens.\
\
One could argue that the CalculatorGraphViewController should probably set itself as the popoverController's delegate so that it can find out when the popover is dismissed by the user and set the popoverController property to nil.  That way, the popoverController property will only be non-nil when the popover is actually up.  Not doing this means that a) we are unnecessarily keeping the popover's memory in the heap sometimes and b) we might dismiss an already-dismissed-by-the-user popover (but that is allowed).\
\
2. The user can now delete unwanted Favorites by swiping across the unwanted program in the table.  This is done via the commitEditingStyle method in the UITableViewDataSource protocol.  All our CalculatorProgramsTableViewController does is delegate this.  The delegate (our CalculatorGraphViewController) simply deletes the given program from the NSUserDefaults and resets the CalculatorProgramsTableViewController's model via its public API.  Note that we had to update the CalculatorProgramsTableViewController's setter for its public API to reload the table view when its Model is changed (this is generally a good idea).\
\
Note also that we use introspection to see if the delegate implements the delete delegate method and, if it doesn't, we prevent deletion swiping using the canEditRowAtIndexPath method in the UITableViewControllerDataSource protocol.\
\
3. Supporting the iPhone is very easy.  The only code required is to add popViewControllerAnimated to the delegate method sent when a program is chosen from the table.  This is because we are going to push the CalculatorProgramsTableViewController (rather than showing it in a popover) when the user touches the Favorites button in the CalculatorGraphViewController scene on the iPhone.\
\
To modify your storyboard on the iPhone to support this:\
\
Add the "Add to Favorites" button to your CalculatorGraphViewController scene.\
Wire it up to the addToFavorites: method.\
\
Copy and paste the CalculatorProgramsTableViewController scene to your iPhone storyboard from your iPad storyboard.\
Add a "Favorites" bar button item to your CalculatorGraphViewController scene.\
Wire a Push segue from the Favorites bar button item to the CalculatorProgramsTableViewController scene you copy/pasted from the iPad storyboard.\
Name the Push segue "Show Favorite Graphs".\
}